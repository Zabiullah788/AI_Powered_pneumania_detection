Backend coding:

import os
import cv2
import numpy as np
import tensorflow as tf
from flask import Flask, request, jsonify, render_template

from tensorflow.keras.models import load_model

# Load the trained pneumonia detection model (.h5 file)
model = load_model('D:\yt works\App\model\improved_Pnumonia_Detector.keras')  # Make sure it's a .h5 model, not .ipynb

# Define class names
class_names = ['Normal', 'Pneumonia']

app = Flask(__name__)

@app.route('/')
def index():
    return render_template('index.html')

@app.route('/predict', methods=['POST'])
def predict():
    if 'file' not in request.files:
        return jsonify({'error': 'No file uploaded'}), 400

    file = request.files['file']
    if file.filename == '':
        return jsonify({'error': 'Empty filename'}), 400

    file_path = os.path.join('static', 'uploaded_image.jpg')
    file.save(file_path)

    # Load and preprocess the image
    img = tf.keras.utils.load_img(file_path, target_size=(150, 150))  # Adjust size based on your model
    img_array = tf.keras.utils.img_to_array(img)
    img_array = img_array / 255.0  # Normalize if your model expects it
    img_batch = np.expand_dims(img_array, axis=0)

    # Predict
    prediction = model.predict(img_batch)[0]
    predicted_class = class_names[int(round(prediction[0]))]  # Assuming sigmoid output (binary class)
    confidence = float(prediction[0] if predicted_class == 'Pneumonia' else 1 - prediction[0]) * 100

    return render_template('index.html', prediction=predicted_class, confidence=confidence, image_url=file_path)

if __name__ == '__main__':
    app.run(debug=True)


USe this in .py file.
